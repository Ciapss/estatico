@font-face {
	font-family: "{{options.fontName}}";
	src: url('{{options.fontPath}}{{options.fontName}}.eot');
	src: url('{{options.fontPath}}{{options.fontName}}.eot?#iefix') format('eot'),
		url('{{options.fontPath}}{{options.fontName}}.woff') format('woff'),
		url('{{options.fontPath}}{{options.fontName}}.ttf') format('truetype'),
		url('{{options.fontPath}}{{options.fontName}}.svg#{{options.fontName}}') format('svg');
}

%icon {
	font-family: "{{options.fontName}}";
		-webkit-font-smoothing: antialiased;
		-moz-osx-font-smoothing: grayscale;
	font-style: normal;
	font-variant: normal;
	font-weight: normal;
	// speak: none; // only necessary if not using the private unicode range (firstGlyph option)
	text-decoration: none;
	text-transform: none;
	line-height: 1;
	position: absolute;
}

@function icon-char($filename) {
	$char: "";
	{{#codepoints}}
	@if $filename == {{name}} {
		$char: "\\{{codepoint}}";
	}
	{{/codepoints}}

	@return $char;
}

@mixin icon($filename, $size: 16, $center: true) {
	position: relative;
	&:before {
		@extend %icon;
		font-size: pxToEm($size);
		content: icon-char($filename);
		top: 50%;
		margin-top: pxToEm(-($size/2), $size);

		@if ($center == true) {
			left: 50%;
			margin-left: pxToEm(-($size/2), $size);
		}

		/* @if ($offsetLeft) {
			left: pxToEm($offsetLeft);
		}

		@if ($offsetRight) {
			right: pxToEm($offsetRight);
		} */

	}
}

{{#codepoints}}.icon-{{name}} {
	padding: 0 1em 0 1.6em;
	@include icon({{name}}, $center: false);

	&:before {
		left: 0;
	}
}
{{/codepoints}}
